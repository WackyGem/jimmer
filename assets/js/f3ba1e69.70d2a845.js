"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[6064],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),r=n(34334);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(83117),r=n(67294),o=n(34334),i=n(72389),l=n(67392),s=n(7094),c=n(12466);const p="tabList__CuJ",u="tabItem_LNqP";function m(e){var t;const{lazy:n,block:i,defaultValue:m,values:d,groupId:g,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=d??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,l.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===m?m:m??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:S}=(0,s.U)(),[N,w]=(0,r.useState)(y),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,c.o5)();if(null!=g){const e=k[g];null!=e&&e!==N&&f.some((t=>t.value===e))&&w(e)}const j=e=>{const t=e.currentTarget,n=C.indexOf(t),a=f[n].value;a!==N&&(T(t),w(a),null!=g&&S(g,String(a)))},x=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]??C[C.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},h)},f.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>C.push(e),onKeyDown:x,onFocus:j,onClick:j},i,{className:(0,o.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,r.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,i.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}},27409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var a=n(83117),r=(n(67294),n(3905)),o=n(65488),i=n(85162);const l={sidebar_position:1,title:"Spring Transaction"},s=void 0,c={unversionedId:"spring/transaction",id:"spring/transaction",title:"Spring Transaction",description:"Integrate Spring Transaction",source:"@site/docs/spring/transaction.mdx",sourceDirName:"spring",slug:"/spring/transaction",permalink:"/jimmer/docs/spring/transaction",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer/tree/main/doc/docs/spring/transaction.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Spring Transaction"},sidebar:"tutorialSidebar",previous:{title:"Spring",permalink:"/jimmer/docs/spring/"},next:{title:"Spring Data",permalink:"/jimmer/docs/spring/repository/"}},p={},u=[{value:"Integrate Spring Transaction",id:"integrate-spring-transaction",level:2},{value:"Use Spring Boot starter",id:"use-spring-boot-starter",level:3},{value:"Don&#39;t use Spring Boot Starter",id:"dont-use-spring-boot-starter",level:3},{value:"Work with JdbcTemplate",id:"work-with-jdbctemplate",level:2}],m={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"integrate-spring-transaction"},"Integrate Spring Transaction"),(0,r.kt)("h3",{id:"use-spring-boot-starter"},"Use Spring Boot starter"),(0,r.kt)("p",null,"If using the Spring Boot Starter provided by Jimmer, no extra work is needed. Jimmer will automatically integrate into Spring's transaction management mechanism."),(0,r.kt)("h3",{id:"dont-use-spring-boot-starter"},"Don't use Spring Boot Starter"),(0,r.kt)("p",null,"If using Spring only, without the Spring Boot Starter provided by Jimmer. You need to code by yourself to integrate Jimmer into Spring's transaction management mechanism."),(0,r.kt)("p",null,"Developers need to create ",(0,r.kt)("inlineCode",{parentName:"p"},"JSqlClient/KSqlClient")," and set its ",(0,r.kt)("inlineCode",{parentName:"p"},"ConnectionManager"),". In ",(0,r.kt)("inlineCode",{parentName:"p"},"ConnectionManager"),", use Spring's ",(0,r.kt)("inlineCode",{parentName:"p"},"org.springframework.jdbc.datasource.DataSourceUtils")," to open and close connections."),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},"@Bean  \npublic JSqlClient sqlClient(DataSource dataSource) {\n    return JSqlClient.newBuilder()\n        // highlight-next-line  \n        .setConnectionManager(\n            new ConnectionManager() {\n                @Override\n                public <R> R execute(\n                    Function<Connection, R> block\n                ) {\n                    Connection con = DataSourceUtils\n                        // highlight-next-line\n                        .getConnection(dataSource);\n                    try {\n                        return block.apply(con);\n                    } finally {\n                        DataSourceUtils\n                        // highlight-next-line\n                        .releaseConnection(con, dataSource);\n                    }\n                }\n            }\n        )\n        ...Omit other configurations...\n        .build();\n}\n"))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},"@Bean\nfun sqlClient(dataSource: DataSource): KSqlClient = \n    newKSqlClient {\n        // highlight-next-line\n        setConnectionManager {\n            val con = DataSourceUtils\n                // highlight-next-line\n                .getConnection(dataSource)\n            try {\n                proceed(con)  \n            } finally {\n                DataSourceUtils\n                // highlight-next-line\n                .releaseConnection(con, dataSource)\n            }\n        }\n        ...Omit other configurations...\n    }\n")))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Don't use normal methods to borrow and return connections from the connection pool. You must use Spring's ",(0,r.kt)("inlineCode",{parentName:"p"},"org.springframework.jdbc.datasource.DataSourceUtils"),".")),(0,r.kt)("h2",{id:"work-with-jdbctemplate"},"Work with JdbcTemplate"),(0,r.kt)("p",null,"Jimmer adopts minimalist design. The API entry point ",(0,r.kt)("inlineCode",{parentName:"p"},"JSqlClient/KSqlClient")," exposes stateless APIs."),(0,r.kt)("p",null,"Many database operation frameworks provide lightweight stateful wrappers for JDBC connections, such as"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JPA's ",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javaee/7/api/javax/persistence/EntityManager.html"},"EntityManager")),(0,r.kt)("li",{parentName:"ul"},"Hibernate's ",(0,r.kt)("a",{parentName:"li",href:"https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/Session.html"},"Session")," "),(0,r.kt)("li",{parentName:"ul"},"MyBatis's ",(0,r.kt)("a",{parentName:"li",href:"https://javadoc.io/doc/org.mybatis/mybatis/latest/org/apache/ibatis/session/SqlSession.html"},"SqlSession"),".")),(0,r.kt)("p",null,"And they also provide stateful wrappers for database transactions, such as"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JPA's ",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javaee/7/api/javax/persistence/EntityManager.html#getTransaction--"},"EntityManager.getTransaction()")),(0,r.kt)("li",{parentName:"ul"},"Hibernate's ",(0,r.kt)("a",{parentName:"li",href:"https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/SharedSessionContract.html#getTransaction()"},"Session.getTransaction()")),(0,r.kt)("li",{parentName:"ul"},"MyBatis's ",(0,r.kt)("a",{parentName:"li",href:"https://javadoc.io/doc/org.mybatis/mybatis/latest/org/apache/ibatis/session/SqlSession.html#commit()"},"SqlSession.commit()"))),(0,r.kt)("p",null,"Jimmer doesn't have similar abstractions. The API entry point ",(0,r.kt)("inlineCode",{parentName:"p"},"JSqlClient/KSqlClient")," exposes stateless APIs. JDBC connection is the only low-level dependency of Jimmer.  "),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This enables an important feature: Jimmer's transaction management is exactly the same as JdbcTemplate's transaction management.")),(0,r.kt)("p",null,"Jimmer doesn't need to provide any APIs like ",(0,r.kt)("inlineCode",{parentName:"p"},"createNativeQuery")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For report queries that are not closely related to ORM, users expect to write complete Native SQL, then JdbcTemplate can be used directly, because Jimmer's transaction management is exactly the same as JdbcTemplate's.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For Jimmer's ORM-style queries, inject ",(0,r.kt)("a",{parentName:"p",href:"../query/native-sql"},"Native SQL")," expressions in strongly typed SQL DSL."))))}d.isMDXComponent=!0}}]);