"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[7316],{31536:(e,t,a)=>{a.d(t,{Z:()=>Z});var n=a(80102),i=a(83117),o=a(67294),l=a(10209),r=a(59766),s=a(94780),c=a(34867);const m=(0,a(70182).ZP)();var d=a(65149),p=a(39707),u=a(66500),k=a(95408),h=a(98700),g=a(85893);const b=["component","direction","spacing","divider","children","className","useFlexGap"],f=(0,u.Z)(),N=m("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,t)=>t.root});function v(e){return(0,d.Z)({props:e,name:"MuiStack",defaultTheme:f})}function y(e,t){const a=o.Children.toArray(e).filter(Boolean);return a.reduce(((e,n,i)=>(e.push(n),i<a.length-1&&e.push(o.cloneElement(t,{key:`separator-${i}`})),e)),[])}const C=({ownerState:e,theme:t})=>{let a=(0,i.Z)({display:"flex",flexDirection:"column"},(0,k.k9)({theme:t},(0,k.P$)({values:e.direction,breakpoints:t.breakpoints.values}),(e=>({flexDirection:e}))));if(e.spacing){const n=(0,h.hB)(t),i=Object.keys(t.breakpoints.values).reduce(((t,a)=>(("object"==typeof e.spacing&&null!=e.spacing[a]||"object"==typeof e.direction&&null!=e.direction[a])&&(t[a]=!0),t)),{}),o=(0,k.P$)({values:e.direction,base:i}),l=(0,k.P$)({values:e.spacing,base:i});"object"==typeof o&&Object.keys(o).forEach(((e,t,a)=>{if(!o[e]){const n=t>0?o[a[t-1]]:"column";o[e]=n}}));const s=(t,a)=>{return e.useFlexGap?{gap:(0,h.NA)(n,t)}:{"& > :not(style) ~ :not(style)":{margin:0,[`margin${i=a?o[a]:e.direction,{row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"}[i]}`]:(0,h.NA)(n,t)}};var i};a=(0,r.Z)(a,(0,k.k9)({theme:t},l,s))}return a=(0,k.dt)(t.breakpoints,a),a};var T=a(90948),x=a(71657);const I=function(e={}){const{createStyledComponent:t=N,useThemeProps:a=v,componentName:r="MuiStack"}=e,m=t(C),d=o.forwardRef((function(e,t){const o=a(e),d=(0,p.Z)(o),{component:u="div",direction:k="column",spacing:h=0,divider:f,children:N,className:v,useFlexGap:C=!1}=d,T=(0,n.Z)(d,b),x={direction:k,spacing:h,useFlexGap:C},I=(0,s.Z)({root:["root"]},(e=>(0,c.Z)(r,e)),{});return(0,g.jsx)(m,(0,i.Z)({as:u,ownerState:x,ref:t,className:(0,l.Z)(I.root,v)},T,{children:f?y(N,f):N}))}));return d}({createStyledComponent:(0,T.ZP)("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,t)=>t.root}),useThemeProps:e=>(0,x.Z)({props:e,name:"MuiStack"})}),Z=I},86153:(e,t,a)=>{a.d(t,{_:()=>w});var n=a(67294),i=a(87357),o=a(83321),l=a(61903),r=a(23599),s=a(86886),c=a(67720),m=a(90629),d=a(7906),p=a(295),u=a(53252),k=a(72882),h=a(53184),g=a(53816),b=a(24661),f=a(96540),N=a(93946),v=a(41733),y=a(50657),C=a(31425),T=a(6514),x=a(58951),I=a(37645),Z=a(52263),E=a(59457);const w=(0,n.memo)((()=>{const{i18n:e}=(0,Z.Z)(),t=(0,n.useMemo)((()=>"zh"==e.currentLocale||"zh_cn"==e.currentLocale||"zh_CN"==e.currentLocale),[e.currentLocale]),a=(0,n.useMemo)((()=>t?A:_),[t]),w=(0,n.useMemo)((()=>{const e=new Map;for(const t of a)e.set(t.id,t);return e}),[a]),B=(0,n.useMemo)((()=>("zh"==e.currentLocale||"zh_cn"==e.currentLocale||e.currentLocale,L)),[e.currentLocale]),O=(0,n.useMemo)((()=>{const e=new Map;for(const t of B)e.set(t.id,t);return e}),[B]),[M,P]=(0,E.x)((()=>({userId:1,province:w.get(1).province,city:w.get(1).city,address:w.get(1).address,items:[{__rowId:1,productId:1,name:O.get(1).name,quantity:2},{__rowId:2,productId:10,name:O.get(10).name,quantity:1}]}))),j=(0,n.useMemo)((()=>Math.max(...M.items.map((e=>e.__rowId)))+1),[M]),q=(0,n.useCallback)((e=>{const t=w.get(parseInt(e.target.value));void 0!==t&&P((e=>{e.userId=t.id,e.province=t.province,e.city=t.city,e.address=t.address}))}),[P,w]),F=(0,n.useCallback)((e=>{P((t=>{t.province=e.target.value}))}),[P]),D=(0,n.useCallback)((e=>{P((t=>{t.city=e.target.value}))}),[P]),R=(0,n.useCallback)((e=>{P((t=>{t.address=e.target.value}))}),[P]),K=(0,n.useCallback)(((e,t)=>{P((a=>{for(const n of a.items)if(n.__rowId===t){n.productId=parseInt(e.target.value),S(a);break}}))}),[P]),z=(0,n.useCallback)(((e,t)=>{P((a=>{for(const n of a.items)if(n.__rowId===t){n.quantity=parseInt(e.target.value),S(a);break}}))}),[P]),G=(0,n.useCallback)((e=>{P((t=>{for(let a=t.items.length-1;a>=0;--a)if(t.items[a].__rowId===e){t.items.splice(a,1);break}}))}),[P]),J=(0,n.useCallback)((()=>{P((e=>{e.items.push({__rowId:j,quantity:1})}))}),[P,j]),[U,W]=(0,n.useState)(!1),V=(0,n.useCallback)((()=>{W(!0)}),[]),H=(0,n.useCallback)((()=>{W(!1)}),[]);return n.createElement(m.Z,{elevation:3,style:{padding:"1.5rem"}},n.createElement(i.Z,{component:"form",noValidate:!0,autoComplete:"off"},n.createElement(s.ZP,{container:!0,spacing:2},n.createElement(s.ZP,{item:!0,xs:4},n.createElement(l.Z,{fullWidth:!0,select:!0,label:t?"\u8d2d\u4e70\u4eba":"Purchaser",value:M.userId,onChange:q},a.map((e=>n.createElement(r.Z,{key:e.id,value:e.id},e.nickName))))),n.createElement(s.ZP,{item:!0,xs:4},n.createElement(l.Z,{fullWidth:!0,label:t?"\u7701\u4efd":"Province",value:M.province,onChange:F})),n.createElement(s.ZP,{item:!0,xs:4},n.createElement(l.Z,{fullWidth:!0,label:t?"\u57ce\u5e02":"City",value:M.city,onChange:D})),n.createElement(s.ZP,{item:!0,xs:12},n.createElement(l.Z,{fullWidth:!0,label:t?"\u5730\u5740":"Address",value:M.address,onChange:R})),n.createElement(s.ZP,{item:!0,xs:12},n.createElement(c.Z,{textAlign:"left"},"\u8ba2\u5355\u660e\u7ec6"),n.createElement(k.Z,{component:m.Z},n.createElement(d.Z,{size:"small"},n.createElement(h.Z,null,n.createElement(g.Z,null,n.createElement(u.Z,null,t?"\u5546\u54c1":"Commodity"),n.createElement(u.Z,null,t?"\u6570\u91cf":"Quantity"),n.createElement(u.Z,null,t?"\u5355\u4ef7":"Unit price"),n.createElement(u.Z,null,t?"\u660e\u7ec6\u4ef7":"Item price"),n.createElement(u.Z,null,t?"\u5220\u9664":"Delete"))),n.createElement(p.Z,null,M.items.map((e=>{const t=void 0!==e.productId?O.get(e.productId):void 0;return n.createElement(g.Z,{key:e.__rowId},n.createElement(u.Z,null,n.createElement(l.Z,{select:!0,value:null==t?void 0:t.id,variant:"standard",size:"small",onChange:t=>{K(t,e.__rowId)}},B.map((e=>n.createElement(r.Z,{key:e.id,value:e.id},e.name))))),n.createElement(u.Z,null,n.createElement(l.Z,{type:"number",value:e.quantity,variant:"standard",size:"small",onChange:t=>{z(t,e.__rowId)}})),n.createElement(u.Z,null,null==t?void 0:t.price),n.createElement(u.Z,null,void 0!==t&&t.price*e.quantity),n.createElement(u.Z,null,n.createElement(N.Z,{onClick:()=>G(e.__rowId)},n.createElement(v.Z,null))))}))),n.createElement(b.Z,null,n.createElement(g.Z,null,n.createElement(u.Z,{colSpan:5},n.createElement(o.Z,{variant:"outlined",onClick:J},n.createElement(f.Z,null),t?"\u6dfb\u52a0":"Add"))))))),n.createElement(s.ZP,{item:!0,xs:12},t?"\u603b\u989d":"Total price",":",M.items.filter((e=>void 0!==e.productId&&"number"==typeof e.quantity)).map((e=>O.get(e.productId).price*e.quantity)).reduce(((e,t)=>e+t),0)),n.createElement(s.ZP,{item:!0,xs:12},n.createElement(o.Z,{variant:"contained",onClick:V},t?"\u63d0\u4ea4":"Submit")))),n.createElement(y.Z,{open:U,onClose:H},n.createElement(I.Z,null,t?"\u4fe1\u606f":"Info"),n.createElement(T.Z,null,n.createElement(x.Z,null,t?"\u4ec5\u4f5c\u793a\u8303\uff0c\u65e0\u4efb\u4f55\u6548\u679c":"For demonstration only, without any effect")),n.createElement(C.Z,null,n.createElement(o.Z,{onClick:H},t?"\u5173\u95ed":"Close"))))})),A=[{id:1,nickName:"\u76ae\u76ae\u9c81",province:"\u56db\u5ddd",city:"\u6210\u90fd",address:"\u9f99\u6cc9\u9a7f\u533a\u6d2a\u7389\u8def\u4e0e\u5341\u6d2a\u8def\u4ea4\u53c9\u53e3"},{id:2,nickName:"\u9c81\u897f\u897f",province:"\u5e7f\u4e1c",city:"\u5e7f\u5dde",address:"\u767d\u4e91\u533a\u77f3\u6c99\u8def300\u53f7"},{id:3,nickName:"\u8212\u514b",province:"\u897f\u85cf",city:"\u62c9\u8428",address:"\u5806\u9f99\u5fb7\u5e86\u533a"},{id:4,nickName:"\u8d1d\u5854",province:"\u4e0a\u6d77",city:"\u4e0a\u6d77",address:"\u6d66\u4e1c\u65b0\u533a\u79c0\u6cbf\u897f\u8def218\u5f04"}],_=[{id:1,nickName:"Schneewittchen",province:"Berlin",city:"Prenzlauer Berg",address:"Brandenburgische Stra\xdfe 9, Prenzlauer Berg, Berlin, Germany"},{id:2,nickName:"Cinderella",province:"Basse-Normandie",city:"Lisieux",address:"20 rue L\xe9on Dierx, Lisieux, Basse-Normandie, France"},{id:3,nickName:"Nuwa",province:"ShanXi",city:"Taiyuan",address:"Qian Feng Nan Lu 99hao, Taiyuan, ShanXi, China"},{id:4,nickName:"Pinocchio",province:"Palazzo Pignano",city:"Cremona",address:"Via Giovanni Amendola 134, Palazzo Pignano, Cremona, Italy"}],L=[{id:1,name:"Timeless Vitamin C Plus E 10 Percent Ferulic Acid Serum Serum Unisex 1 oz",price:14.69},{id:2,name:"Dockers Men's Tiller Boat Shoe",price:52.41},{id:3,name:"Paxcoo 124 Skeins Embroidery Floss Cross Stitch Thread with Needles",price:29.99},{id:4,name:"Michael Kors Crossbody",price:70.6},{id:5,name:"Crocs unisex-child Classic Graphic Clog",price:34.99},{id:6,name:"Timex Time Machines Digital 35mm Watch",price:28.95},{id:7,name:"Scalex Mite & Lice Spray for Birds, 8 oz.",price:14.75},{id:8,name:"Under Armour Men's Storm Liner",price:13.03},{id:9,name:"Nike Women's Pro 3\" Training Shorts",price:35.86},{id:10,name:"Olaplex No. 4 Bond Maintenance Shampoo",price:30}];function S(e){const t=e.items,a=new Map;for(let n=0;n<t.length;n++){const e=t[n];if("number"!=typeof e.quantity)e.quantity=1;else if(e.quantity<1){t.splice(n--,1);continue}if(void 0===e.productId)continue;const i=a.get(e.productId);void 0===i?a.set(e.productId,e):(i.quantity+=e.quantity,t.splice(n--,1))}}},20036:(e,t,a)=>{a.d(t,{k:()=>f});var n=a(52263),i=a(94054),o=a(33841),l=a(23599),r=a(90629),s=a(43246),c=a(31536),m=a(61903),d=a(50657),p=a(37645),u=a(6514),k=a(31425),h=a(58951),g=a(83321),b=a(67294);const f=(0,b.memo)((()=>{const[e,t]=(0,b.useState)((()=>({name:"Learning GraphQL",edition:1,price:45,storeId:1,authorIds:[1,2]}))),a=(0,b.useCallback)((e=>{t((t=>({...t,name:e.target.value})))}),[]),f=(0,b.useCallback)((e=>{t((t=>({...t,edition:e.target.valueAsNumber})))}),[]),N=(0,b.useCallback)((e=>{t((t=>({...t,price:e.target.valueAsNumber})))}),[]),v=(0,b.useCallback)((e=>{let a;const n=e.target.value;a="string"==typeof n?parseInt(n):n,-1===a&&(a=void 0),t((e=>({...e,storeId:a})))}),[]),y=(0,b.useCallback)((e=>{let a=[];console.log(e.target.value);const n=e.target.value;a="string"==typeof n?n.split(",").map((e=>parseInt(e))):n,t((e=>({...e,authorIds:a})))}),[]),{i18n:C}=(0,n.Z)(),T=(0,b.useMemo)((()=>"zh"==C.currentLocale||"zh_cn"==C.currentLocale||"zh_CN"==C.currentLocale),[C.currentLocale]),[x,I]=(0,b.useState)(!1),Z=(0,b.useCallback)((()=>{I(!0)}),[]),E=(0,b.useCallback)((()=>{I(!1)}),[]);return b.createElement(r.Z,{elevation:3,style:{padding:"1.5rem",width:500}},b.createElement(c.Z,{spacing:2},b.createElement("h1",null,"Book Form"),b.createElement(m.Z,{label:"Name",value:e.name,onChange:a,error:""===e.name,helperText:""===e.name?"Name is required":""}),b.createElement(m.Z,{label:"Edition",type:"number",value:e.edition,onChange:f}),b.createElement(m.Z,{label:"Price",type:"number",value:e.price,onChange:N}),b.createElement(i.Z,{fullWidth:!0},b.createElement(o.Z,{id:"store-select-label"},"Store"),b.createElement(s.Z,{labelId:"store-select-label",label:"Authors",value:e.storeId,onChange:v},b.createElement(l.Z,{value:-1},"--NONE--"),b.createElement(l.Z,{value:1},"O'REILLY"),b.createElement(l.Z,{value:2},"MANNING"))),b.createElement(i.Z,{fullWidth:!0},b.createElement(o.Z,{id:"author-multi-select-label"},"Authors"),b.createElement(s.Z,{multiple:!0,labelId:"author-multi-select-label",label:"Authors",value:e.authorIds,onChange:y},b.createElement(l.Z,{value:1},"Eve Procello"),b.createElement(l.Z,{value:2},"Alex Banks"),b.createElement(l.Z,{value:3},"Dan Vanderkam"),b.createElement(l.Z,{value:4},"Boris Cherny"),b.createElement(l.Z,{value:5},"Samer Buna"))),b.createElement(i.Z,null,b.createElement(g.Z,{onClick:Z,variant:"contained"},"\u63d0\u4ea4"))),b.createElement(d.Z,{open:x,onClose:E},b.createElement(p.Z,null,T?"\u4fe1\u606f":"Info"),b.createElement(u.Z,null,b.createElement(h.Z,null,T?"\u4ec5\u4f5c\u793a\u8303\uff0c\u65e0\u4efb\u4f55\u6548\u679c":"For demonstration only, without any effect")),b.createElement(k.Z,null,b.createElement(g.Z,{onClick:E},"\u5173\u95ed"))))}))},32102:(e,t,a)=>{a.d(t,{s:()=>h});var n=a(83117),i=a(67294),o=a(42293),l=a(50657),r=a(6514),s=a(54776),c=a(10155),m=a(15861),d=a(93946),p=a(9137),u=a(61274),k=a(50594);const h=(0,i.memo)((e=>{let{open:t,fullScreen:a=!1,title:n,onClose:s,children:h}=e;const[b,f]=(0,i.useState)(a),N=(0,i.useCallback)((()=>{f((e=>!e))}),[]);return i.createElement(l.Z,{open:t,onClose:s,fullScreen:b,TransitionComponent:g,maxWidth:"md"},i.createElement(o.Z,{sx:{position:"relative"}},i.createElement(c.Z,null,i.createElement(m.Z,{sx:{ml:2,flex:1},variant:"h6",component:"div"},n),i.createElement(d.Z,{onClick:N,style:{color:"white"}},b?i.createElement(u.Z,null):i.createElement(p.Z,null)),i.createElement(d.Z,{"aria-label":"close",onClick:s,style:{color:"white"}},i.createElement(k.Z,null)))),i.createElement(r.Z,null,h))})),g=i.forwardRef((function(e,t){return i.createElement(s.Z,(0,n.Z)({direction:"up",ref:t},e))}))},39511:(e,t,a)=>{a.d(t,{b:()=>l});var n=a(67294),i=a(83321),o=a(32102);const l=(0,n.memo)((e=>{let{buttonText:t,fullScreen:a=!1,title:l=t,variant:r="contained",children:s}=e;const[c,m]=(0,n.useState)(!1),d=(0,n.useCallback)((e=>{m(!0),e.stopPropagation?e.stopPropagation():e.cancelBubble=!0}),[]),p=(0,n.useCallback)((()=>{m(!1)}),[]);return n.createElement(n.Fragment,null,n.createElement(i.Z,{"data-is-view-more-button":"true",onClick:d,variant:r,size:"outlined"==r?"small":"medium"},t),n.createElement(o.s,{open:c,onClose:p,title:l,fullScreen:a},s))}))},76500:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>m,metadata:()=>p,toc:()=>k});var n=a(83117),i=(a(67294),a(3905)),o=a(65488),l=a(85162),r=a(20036),s=a(86153),c=a(39511);const m={sidebar_position:6,title:"Associated Id Checking"},d=void 0,p={unversionedId:"mutation/save-command/id-checking",id:"mutation/save-command/id-checking",title:"Associated Id Checking",description:"Basic Concepts",source:"@site/docs/mutation/save-command/id-checking.mdx",sourceDirName:"mutation/save-command",slug:"/mutation/save-command/id-checking",permalink:"/jimmer/docs/mutation/save-command/id-checking",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer/tree/main/doc/docs/mutation/save-command/id-checking.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Associated Id Checking"},sidebar:"tutorialSidebar",previous:{title:"Dissociation Operations",permalink:"/jimmer/docs/mutation/save-command/dissociation"},next:{title:"Optimistic/Pessimistic Lock",permalink:"/jimmer/docs/mutation/save-command/lock"}},u={},k=[{value:"Basic Concepts",id:"basic-concepts",level:2},{value:"For Short Associations Only",id:"for-short-associations-only",level:3},{value:"Target Foreign Key",id:"target-foreign-key",level:3},{value:"Checking Mechanism",id:"checking-mechanism",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Global Configuration",id:"global-configuration",level:3},{value:"Command-Level Configuration",id:"command-level-configuration",level:3}],h={toc:k};function g(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"basic-concepts"},"Basic Concepts"),(0,i.kt)("h3",{id:"for-short-associations-only"},"For Short Associations Only"),(0,i.kt)("p",null,"Association id checking is a feature that only applies to ",(0,i.kt)(c.b,{buttonText:"short associations",variant:"text",mdxType:"ViewMore"},(0,i.kt)(r.k,{mdxType:"ShortAssociation"})),", and is meaningless for ",(0,i.kt)(c.b,{buttonText:"long associations",variant:"text",mdxType:"ViewMore"},(0,i.kt)(s._,{mdxType:"LongAssociation"})),"."),(0,i.kt)("p",null,"As we learned before, save commands can persist arbitrary data shapes, and any object can further hold associated objects. "),(0,i.kt)("p",null,"If the id of an associated object is specified, but the object it represents does not exist in the database, how does Jimmer handle this scenario?"),(0,i.kt)("p",null,"First, for ",(0,i.kt)(c.b,{buttonText:"long associations",variant:"text",mdxType:"ViewMore"},(0,i.kt)(s._,{mdxType:"LongAssociation"})),", Jimmer will first create the non-existing associated object, then establish the association between the current object and the new associated object. For example:"),(0,i.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'sqlClient.update(\n    BookDraft.$.produce(draft -> {\n        draft.setId(3L);\n        draft.addIntoAuthors(author -> author.setId(1L));\n        draft.addIntoAuthors(author -> author.setId(2L));\n        // highlight-next-line\n        draft.addIntoAuthors(author -> {\n            author.setId(1000L); // illegal associated id, 1000\n            author.setFirstName("Svetlana");\n            author.setLastName("Isakova");\n            author.setGender(Gender.FEMALE);\n        });\n    })\n);\n'))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'sqlClient.update(\n    new(Book::class).by {\n        id = 3L\n        authors().addBy { id = 1L } \n        authors().addBy { id = 2L }\n        // highlight-next-line\n        authors().addBy {\n            id = 1000L // illegal associated id, 1000\n            firstName = "Svetlana"\n            lastName = "Isakova"\n            gender = Gender.FEMALE\n        }\n    }\n)\n')))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This example mixes long and short associations, but the highlighted line of code is a long association.")),(0,i.kt)("p",null,"The generated SQL is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"\n// Check if associated object exists\nselect\n    tb_1_.ID,\n    tb_1_.FIRST_NAME,\n    tb_1_.LAST_NAME\nfrom AUTHOR tb_1_\nwhere\n    tb_1_.ID = ? /* 1000 */\n\n// Associated object does not exist, create it\n// highlight-next-line  \ninsert into AUTHOR(ID, FIRST_NAME, LAST_NAME, GENDER)\nvalues\n    (? /* 1000 */, ? /* Svetlana */, ? /* Isakova */, ? /* F */)\n\n// Query current `Book` and `Author` mapping\nselect\n    AUTHOR_ID\nfrom BOOK_AUTHOR_MAPPING \nwhere\n    BOOK_ID = ? /* 3 */\n\n// Map current `Book` with the newly created `Author`  \ninsert into BOOK_AUTHOR_MAPPING(BOOK_ID, AUTHOR_ID)\nvalues\n    (? /* 3 */, ? /* 1000 */)\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"As you can see, when saving a ",(0,i.kt)(c.b,{buttonText:"long association",variant:"text",mdxType:"ViewMore"},(0,i.kt)(s._,{mdxType:"LongAssociation"})),", even if an illegal id is specified for the associated object ",(0,i.kt)("em",{parentName:"p"},"(1000 in this example)"),", Jimmer will still create a new associated object using that id."),(0,i.kt)("p",{parentName:"admonition"},"Therefore, ",(0,i.kt)("inlineCode",{parentName:"p"},"association id checking")," is not an issue at all for ",(0,i.kt)(c.b,{buttonText:"long associations",variant:"text",mdxType:"ViewMore"},(0,i.kt)(s._,{mdxType:"LongAssociation"})),"."),(0,i.kt)("p",{parentName:"admonition"},"However, for ",(0,i.kt)(c.b,{buttonText:"short associations",variant:"text",mdxType:"ViewMore"},(0,i.kt)(r.k,{mdxType:"ShortAssociation"})),", Jimmer is only responsible for creating the association between the current object and the associated object, and will not automatically create non-existing associated objects."),(0,i.kt)("p",{parentName:"admonition"},"Therefore, ",(0,i.kt)("inlineCode",{parentName:"p"},"association id checking")," is a topic that only makes sense for ",(0,i.kt)(c.b,{buttonText:"short associations",variant:"text",mdxType:"ViewMore"},(0,i.kt)(r.k,{mdxType:"ShortAssociation"})),". In the following examples of this article, all discussions are about ",(0,i.kt)(c.b,{buttonText:"short associations",variant:"text",mdxType:"ViewMore"},(0,i.kt)(r.k,{mdxType:"ShortAssociation"})),".")),(0,i.kt)("h3",{id:"target-foreign-key"},"Target Foreign Key"),(0,i.kt)("p",null,"To discuss the id checking problem of short associations, we first define a concept for associated properties: the target foreign key."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For associations based on join tables, the foreign key in the join table that points to the target entity table is the target foreign key."),(0,i.kt)("p",{parentName:"li"},"For example: The target foreign key for ",(0,i.kt)("inlineCode",{parentName:"p"},"Book.authors")," is the ",(0,i.kt)("inlineCode",{parentName:"p"},"AUTHOR_ID")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"BOOK_AUTHOR_MAPPING")," table. The target foreign key for ",(0,i.kt)("inlineCode",{parentName:"p"},"Author.books")," is the ",(0,i.kt)("inlineCode",{parentName:"p"},"BOOK_ID")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"BOOK_AUTHOR_MAPPING")," table.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"For associations based on foreign keys, whether the foreign key is fake or not (please refer to ",(0,i.kt)("a",{parentName:"p",href:"../../mapping/base/foreignkey"},"Fake Foreign Keys"),"), the foreign key of the association itself is the target foreign key."),(0,i.kt)("p",{parentName:"li"},"For example: The target foreign key for ",(0,i.kt)("inlineCode",{parentName:"p"},"Book.store")," is the ",(0,i.kt)("inlineCode",{parentName:"p"},"STORE_ID")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"BOOK")," table.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If neither of the above two cases apply, the association is considered to not have a target foreign key."),(0,i.kt)("p",{parentName:"li"},"Properties without a target foreign key are the ones with ",(0,i.kt)("inlineCode",{parentName:"p"},"mappedBy")," specified for one-to-one or one-to-many mappings. That is, properties decorated with ",(0,i.kt)("inlineCode",{parentName:"p"},'@OneToOne(mappedBy = "...")')," or ",(0,i.kt)("inlineCode",{parentName:"p"},'@OneToMany(mappedBy="...")'),", such as: ",(0,i.kt)("inlineCode",{parentName:"p"},"BookStore.books"),"."))),(0,i.kt)("h2",{id:"checking-mechanism"},"Checking Mechanism"),(0,i.kt)("p",null,"Users can configure whether to check the ids of short associated objects. Below we discuss the behaviors with and without checking enabled for properties with different target foreign keys."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Properties without target foreign keys"),(0,i.kt)("p",{parentName:"li"},"Take ",(0,i.kt)("inlineCode",{parentName:"p"},"BookStore.books")," as an example. The code to save a short association is:"),(0,i.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"sqlClient.update(\n        BookStoreDraft.$.produce(draft -> {\n            draft.setId(2L);\n            draft.addIntoBooks(book -> book.setId(8L));\n            draft.addIntoBooks(book -> book.setId(9L));\n            draft.addIntoBooks(book -> book.setId(1000L));\n            draft.addIntoBooks(book -> book.setId(1001L));\n        })\n);\n"))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"sqlClient.update(\n    new(BookStore::class).by {\n        id = 2L\n        books().addBy { id = 8L }\n        books().addBy { id = 9L }  \n        books().addBy { id = 1000L }\n        books().addBy { id = 1001L }\n    }\n);\n")))),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Without checking"),(0,i.kt)("p",{parentName:"li"},"Properties without a target foreign key will automatically ignore associated objects with illegal ids. For example:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"update book set store_id = 2 where id in(1, 2, 1000, 10001)\n")),(0,i.kt)("p",{parentName:"li"},"If 1000 and 10001 are ids that do not exist in the database, this update statement will only affect the two existing records, and the two non-existing records will be naturally ignored.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"With checking"),(0,i.kt)("p",{parentName:"li"},"Jimmer will execute the following query to check all short associated ids:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"select\n    tb_1_.ID \nfrom BOOK tb_1_\nwhere\n    tb_1_.ID in (\n        ? /* 1 */, ? /* 2 */, ? /* 1000 */, ? /* 1001 */\n    )\n")),(0,i.kt)("p",{parentName:"li"},"If ids 1000 and 1001 do not exist in the database, the following exception will be thrown:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'Save error caused by the path: "<root>.books": Illegal ids: [1000, 1001]\n'))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Properties with target foreign keys"),(0,i.kt)("p",{parentName:"li"},"Take ",(0,i.kt)("inlineCode",{parentName:"p"},"Book.store")," as an example. The code to save a short association is:"),(0,i.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"sqlClient.update(\n        BookDraft.$.produce(draft -> {\n            draft.setId(10L);\n            draft.applyStore(store -> store.setId(321L));\n        })\n);\n"))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"sqlClient.update(\n    new(Book::class).by {\n        id = 10L\n        store().apply { id = 321L }\n    }\n);\n")))),(0,i.kt)("p",{parentName:"li"},"Assume id 321 does not exist for BookStore in the database."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Without checking"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If the foreign key is fake, there is no real foreign key constraint in the database, and Jimmer will allow ",(0,i.kt)("inlineCode",{parentName:"p"},"BOOK.STORE_ID")," to be modified to an illegal value.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If the foreign key is real, there is a real foreign key constraint in the database, and the underlying database will throw an error eventually.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"With checking"),(0,i.kt)("p",{parentName:"li"},"Regardless of whether the foreign key is fake or not, Jimmer will execute the following query to check the short associated id:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"select\n    tb_1_.ID \nfrom BOOK_STORE tb_1_\nwhere\n    tb_1_.ID in (\n        ? /* 321 */\n    ) \n")),(0,i.kt)("p",{parentName:"li"},"Once the query returns no data, the following exception will be thrown:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'Save error caused by the path: "<root>.store": Illegal ids: [321]\n')))),(0,i.kt)("admonition",{parentName:"li",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"As you can see, for properties with a real target foreign key, exceptions will be thrown regardless of whether Jimmer's short association id checking is enabled."),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Without checking, the database throws the error. The advantage is avoiding an extra SQL query, the disadvantage is less control over the exception message and type.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"With checking, Jimmer throws the error. The advantage is clear exception message and type, the disadvantage is an extra SQL query.")))))),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"It is recommended to turn on this checking mechanism for all properties if your project does not have extreme performance requirements, in order to get ideal exception information ",(0,i.kt)("em",{parentName:"p"},"(we will introduce how to configure it later)"),".")),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"Users can configure whether to check associated ids for properties. There are global configuration and command-level configuration."),(0,i.kt)("h3",{id:"global-configuration"},"Global Configuration"),(0,i.kt)("p",null,"The global configuration provides three levels: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NONE")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"FAKE")," "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ALL"))),(0,i.kt)("p",null,"The behaviors are:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null},"NONE"),(0,i.kt)("th",{parentName:"tr",align:null},"FAKE"),(0,i.kt)("th",{parentName:"tr",align:null},"ALL"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Associations without target foreign key"),(0,i.kt)("td",{parentName:"tr",align:null},"No checking"),(0,i.kt)("td",{parentName:"tr",align:null},"Checking"),(0,i.kt)("td",{parentName:"tr",align:null},"Checking")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Associations with fake target foreign key"),(0,i.kt)("td",{parentName:"tr",align:null},"No checking"),(0,i.kt)("td",{parentName:"tr",align:null},"Checking"),(0,i.kt)("td",{parentName:"tr",align:null},"Checking")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Associations with real target foreign key"),(0,i.kt)("td",{parentName:"tr",align:null},"No checking"),(0,i.kt)("td",{parentName:"tr",align:null},"No checking"),(0,i.kt)("td",{parentName:"tr",align:null},"Checking")))),(0,i.kt)("p",null,"There are two ways to configure globally:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Via Spring Boot Starter configuration"),(0,i.kt)("p",{parentName:"li"},"Modify ",(0,i.kt)("inlineCode",{parentName:"p"},"application.yml")," ",(0,i.kt)("em",{parentName:"p"},"(or ",(0,i.kt)("inlineCode",{parentName:"em"},"application.properties"),")")," and add the following:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"jimmer:\n    id-only-target-checking-level: ALL\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Via low-level API"),(0,i.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"JSqlClient sqlClient = JSqlClient\n    .newBuilder()\n    .setIdOnlyTargetCheckingLevel(IdOnlyTargetCheckingLevel.ALL)\n    ...other configurations omitted...\n    .build();\n"))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"val sqlClient = newKSqlClient {\n    setIdOnlyTargetCheckingLevel(IdOnlyTargetCheckingLevel.ALL) \n    ...other configurations omitted...\n}\n")))))),(0,i.kt)("h3",{id:"command-level-configuration"},"Command-Level Configuration"),(0,i.kt)("p",null,"The command-level configuration can override the global configuration, but only affects the current save command."),(0,i.kt)("p",null,"There are three features for command-level configuration:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Explicitly specify properties to check"),(0,i.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"Book book = ...\nsqlClient\n    .getEntities()\n    .saveCommand(book)\n    // highlight-next-line  \n    .setAutoIdOnlyTargetChecking(BookProps.STORE)\n    // highlight-next-line\n    .setAutoIdOnlyTargetChecking(BookProps.AUTHORS)\n    .execute();\n"))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"val book = ...\nsqlClient.save(book) {\n    // highlight-next-line\n    setAutoIdOnlyTargetChecking(Book::store) \n    // highlight-next-line  \n    setAutoIdOnlyTargetChecking(Book::authors)\n}\n")))),(0,i.kt)("admonition",{parentName:"li",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If the global configuration already enables checking, no need to adjust the save command like this."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Specify all properties to check"),(0,i.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"Book book = ...\nsqlClient\n    .getEntities()\n    .saveCommand(book)\n    // highlight-next-line\n    .setAutoIdOnlyTargetCheckingAll()\n    .execute();\n"))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"val book = ...\nsqlClient.save(book) {\n    // highlight-next-line\n    setAutoIdOnlyTargetCheckingAll()\n}\n")))),(0,i.kt)("admonition",{parentName:"li",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If the global configuration already enables checking, no need to adjust the save command like this."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Negative configuration, explicitly specify properties to not check"),(0,i.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"Book book = ...\nsqlClient\n    .getEntities()\n    .saveCommand(book)\n    .setAutoIdOnlyTargetCheckingAll()\n    // highlight-next-line\n    .setAutoIdOnlyTargetChecking(BookProps.STORE, false)\n    .execute();\n"))),(0,i.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"val book = ...\nsqlClient.save(book) {\n    setAutoIdOnlyTargetCheckingAll()\n    // highlight-next-line\n    setAutoIdOnlyTargetChecking(Book::authors, false)\n}\n")))))))}g.isMDXComponent=!0}}]);