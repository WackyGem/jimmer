"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[9249],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),m=d(a),c=l,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return a?n.createElement(k,o(o({ref:t},s),{},{components:a})):n.createElement(k,o({ref:t},s))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,o=new Array(i);o[0]=m;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:l,o[1]=r;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),l=a(34334);const i="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(83117),l=a(67294),i=a(34334),o=a(72389),r=a(67392),p=a(7094),d=a(12466);const s="tabList__CuJ",u="tabItem_LNqP";function m(e){var t;const{lazy:a,block:o,defaultValue:m,values:c,groupId:k,className:g}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=c??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),b=(0,r.l)(v,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===m?m:m??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==f&&!v.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,p.U)(),[T,w]=(0,l.useState)(f),E=[],{blockElementScrollPositionUntilNextRender:D}=(0,d.o5)();if(null!=k){const e=y[k];null!=e&&e!==T&&v.some((t=>t.value===e))&&w(e)}const j=e=>{const t=e.currentTarget,a=E.indexOf(t),n=v[a].value;n!==T&&(D(t),w(n),null!=k&&N(k,String(n)))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=E.indexOf(e.currentTarget)+1;a=E[t]??E[0];break}case"ArrowLeft":{const t=E.indexOf(e.currentTarget)-1;a=E[t]??E[E.length-1];break}}null==(t=a)||t.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",s)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},g)},v.map((e=>{let{value:t,label:a,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>E.push(e),onKeyDown:x,onFocus:j,onClick:j},o,{className:(0,i.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":T===t})}),a??t)}))),a?(0,l.cloneElement)(h.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function c(e){const t=(0,o.Z)();return l.createElement(m,(0,n.Z)({key:String(t)},e))}},98360:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>r,metadata:()=>d,toc:()=>u});var n=a(83117),l=(a(67294),a(3905)),i=a(65488),o=a(85162);const r={sidebar_position:3,title:"Logical Deletion"},p=void 0,d={unversionedId:"mapping/advanced/logical-deleted",id:"mapping/advanced/logical-deleted",title:"Logical Deletion",description:"Logical deletion, also known as soft deletion, does not actually delete data from the database. Instead, it creates the illusion that data has been deleted by hiding it. This leaves room for recovery in case of misoperation.",source:"@site/docs/mapping/advanced/logical-deleted.mdx",sourceDirName:"mapping/advanced",slug:"/mapping/advanced/logical-deleted",permalink:"/jimmer/docs/mapping/advanced/logical-deleted",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer/tree/main/doc/docs/mapping/advanced/logical-deleted.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Logical Deletion"},sidebar:"tutorialSidebar",previous:{title:"MappedSuperclass",permalink:"/jimmer/docs/mapping/advanced/mapped-super-class"},next:{title:"View Properites",permalink:"/jimmer/docs/mapping/advanced/view/"}},s={},u=[{value:"Usage",id:"usage",level:2},{value:"boolean Type",id:"boolean-type",level:3},{value:"int Type",id:"int-type",level:3},{value:"Enum Type",id:"enum-type",level:3},{value:"Date",id:"date",level:3},{value:"Multi-View Cache Support",id:"multi-view-cache-support",level:2}],m={toc:u};function c(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Logical deletion, also known as soft deletion, does not actually delete data from the database. Instead, it creates the illusion that data has been deleted by hiding it. This leaves room for recovery in case of misoperation."),(0,l.kt)("p",null,"To enable logical deletion for entities, a flag property decorated with ",(0,l.kt)("inlineCode",{parentName:"p"},"org.babyfish.jimmer.sql.LogicalDeleted")," needs to be added to indicate whether the data is normal or deleted."),(0,l.kt)("p",null,"Once a logical deletion property is configured for an entity:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"By default, when developers call the API to delete an entity object, Jimmer does not actually delete the data with SQL ",(0,l.kt)("inlineCode",{parentName:"p"},"delete")," statement. Instead, it uses ",(0,l.kt)("inlineCode",{parentName:"p"},"update"),' statement to set the logical deletion property of the entity to "deleted".'),(0,l.kt)("p",{parentName:"li"},"Exception: Even if an entity has logical deletion property, Jimmer also provides APIs for developers to forcibly truly delete objects by passing additional parameters.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"By default, all SQL queries against the entity will be automatically appended with ",(0,l.kt)("inlineCode",{parentName:"p"},"where soft_delete_flag <> deleted")," condition to create the illusion that some data has been deleted."),(0,l.kt)("p",{parentName:"li"},"Exceptions:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Jimmer provides some convenience APIs that query entities ",(0,l.kt)("em",{parentName:"p"},"(or entity id sets)")," by id ",(0,l.kt)("em",{parentName:"p"},"(or id sets)")," without requiring users to create queries. This set of APIs ignores the soft deletion rules.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Jimmer can ignore logical deletion filtering rules ",(0,l.kt)("em",{parentName:"p"},"(not add filtering conditions)"),"; or even reverse logical deletion filtering rules ",(0,l.kt)("em",{parentName:"p"},"(add opposite filtering conditions to find deleted data only)"),"."))))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Logical deletion itself is a relatively fixed feature. In terms of automatically adding query filtering conditions, ",(0,l.kt)("a",{parentName:"p",href:"../../query/global-filter"},"Global Filters")," is a more general feature."),(0,l.kt)("p",{parentName:"admonition"},"In fact, logical deletion itself is a built-in ",(0,l.kt)("a",{parentName:"p",href:"../../query/global-filter"},"Global Filter")," provided by Jimmer without requiring implementation by developers.")),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"The logical deletion flag property can be one of the following types:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"boolean: must be non-null"),(0,l.kt)("li",{parentName:"ul"},"int: must be non-null "),(0,l.kt)("li",{parentName:"ul"},"enum: must be non-null"),(0,l.kt)("li",{parentName:"ul"},"date: must be nullable")),(0,l.kt)("h3",{id:"boolean-type"},"boolean Type"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use true to indicate deleted"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'@Entity\npublic interface Book {\n\n    // highlight-next-line\n    @LogicalDeleted("true")  \n    boolean isDeleted();\n\n    ...Omit other code...\n}\n'))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'@Entity\ninterface Book {\n\n    // highlight-next-line\n    @LogicalDeleted("true")\n    val isDeleted: Boolean\n\n    ...Omit other code...\n}\n'))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use false to indicate deleted"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'@Entity\npublic interface Book {\n\n    // highlight-next-line\n    @LogicalDeleted("false")\n    boolean isEnabled();\n\n    ...Omit other code...\n}\n'))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'@Entity\ninterface Book {\n\n    // highlight-next-line\n    @LogicalDeleted("false")\n    val isEnabled: Boolean\n\n    ...Omit other code...\n}\n')))))),(0,l.kt)("p",null,"Here, in addition to the ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," parameter we configured for ",(0,l.kt)("inlineCode",{parentName:"p"},"@LogicalDeleted"),", the annotation also has another parameter ",(0,l.kt)("inlineCode",{parentName:"p"},"restoredValue"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"value"),": The value of the field when the object is deleted.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"restoredValue"),": The value of the field when the object is not deleted."))),(0,l.kt)("p",null,"Obviously, ",(0,l.kt)("inlineCode",{parentName:"p"},"value")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"restoredValue")," cannot be equal. "),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"When this property has only two possible values ",(0,l.kt)("em",{parentName:"p"},"(boolean or enum with only two options)"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"restoredValue")," can be omitted.")),(0,l.kt)("p",null,"Therefore, the annotations demonstrated in the above code are actually omissions of the ",(0,l.kt)("inlineCode",{parentName:"p"},"restoredValue")," parameter:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},'@LogicalDeleted("true")')," is actually a shorthand for ",(0,l.kt)("inlineCode",{parentName:"p"},'@LogicalDeleted(value = "true", restoredValue = "false")'),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},'@LogicalDeleted("false")')," is actually a shorthand for ",(0,l.kt)("inlineCode",{parentName:"p"},'@LogicalDeleted(value = "false", restoredValue = "true")'),"."))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Whether omitted or explicitly specified by the developer, the ",(0,l.kt)("inlineCode",{parentName:"p"},"restoredValue")," parameter has two roles:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The default value of this property when the object is first saved.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"When data in deleted state is saved again and its state needs to be restored to normal, the value to which this property is automatically reset.")))),(0,l.kt)("h3",{id:"int-type"},"int Type"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'@Entity\npublic interface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(value = "1", restoredValue = "0")\n    int state();\n\n    ...Omit other code...\n}\n'))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'@Entity\ninterface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(value = "1", restoredValue = "0")\n    val state: Int\n\n    ...Omit other code...\n}\n')))),(0,l.kt)("h3",{id:"enum-type"},"Enum Type"),(0,l.kt)("p",null,"First, define the enum type to represent data status:"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="BookState.java"',title:'"BookState.java"'},"public enum BookState {\n    INTIALIZED,  \n    FROZEN,\n    PUBLISHED,\n    DELETED\n}\n"))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="BookState.kt"',title:'"BookState.kt"'},"enum class BookState {\n    INTIALIZED,\n    FROZEN,\n    PUBLISHED,\n    DELETED\n}\n")))),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'@Entity\npublic interface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(\n        value = "DELETED",\n        restoredValue = "INTIALIZED"  \n    )\n    BookState state();\n\n    ...Omit other code...\n}\n'))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'@Entity\ninterface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(\n        value = "DELETED",\n        restoredValue = "INTIALIZED"\n    )\n    val state: BookState\n\n    ...Omit other code...\n}\n')))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"If the enum has only two options, ",(0,l.kt)("inlineCode",{parentName:"p"},"restoredValue")," can be omitted.")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"For Jimmer's configuration related to saving enum properties, please refer to ",(0,l.kt)("a",{parentName:"p",href:"./enum"},"Enum Mapping"),".")),(0,l.kt)("h3",{id:"date"},"Date"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use non-null to indicate deleted, null to indicate not deleted"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'@Entity\npublic interface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(value = "now", restoredValue = "null") \n    @Nullable\n    LocalDateTime deletedTime();\n\n    ...Omit other code...\n}\n'))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'@Entity\ninterface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(value = "now", restoredValue = "null")\n    val deletedTime: LocalDateTime?\n\n    ...Omit other code...\n}\n'))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use null to indicate deleted, non-null to indicate not deleted"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'@Entity\npublic interface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(value = "null", restoredValue = "now")\n    @Nullable\n    LocalDateTime createdTime();\n\n    ...Omit other code...\n}\n'))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'@Entity\ninterface Book {\n\n    // highlight-next-line\n    @LogicalDeleted(value = "null", restoredValue = "now")\n    val createdTime: LocalDateTime?\n\n    ...Omit other code...\n}\n')))))),(0,l.kt)("p",null,"Where ",(0,l.kt)("inlineCode",{parentName:"p"},"now")," is a special value defined by ",(0,l.kt)("inlineCode",{parentName:"p"},"@LogicalDeleted")," that represents current time."),(0,l.kt)("h2",{id:"multi-view-cache-support"},"Multi-View Cache Support"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"Logical deletion itself is a very simple feature. If it is only used at the SQL operation level, it is merely a simple query condition adding feature."),(0,l.kt)("p",{parentName:"admonition"},"However, when used together with Jimmer's caching capabilities, since logical deletion itself is a built-in ",(0,l.kt)("a",{parentName:"p",href:"../../query/global-filter"},"Global Filter"),", this will involve ",(0,l.kt)("a",{parentName:"p",href:"../../cache/multiview-cache"},"Multi-View Cache")," issues that developers need to be aware of.")),(0,l.kt)("p",null,"This article will not discuss what problems ",(0,l.kt)("a",{parentName:"p",href:"../../cache/multiview-cache"},"Multi-View Cache")," tries to solve and how to solve them. Please refer to related documents on ",(0,l.kt)("a",{parentName:"p",href:"../../cache/multiview-cache"},"Multi-View Cache"),". This article briefly introduces how to enable multi-view cache for logical deletion properties:"),(0,l.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'@Entity \npublic interface Book {\n\n    @LogicalDeleted(\n        value = "true",\n        // highlight-next-line\n        useMultiViewCache = true  \n    )\n    boolean isDeleted();\n\n    ...Omit other code...\n}\n'))),(0,l.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'@Entity\ninterface Book {\n\n    @LogicalDeleted(\n        value = "true",\n        // highlight-next-line\n        useMultiViewCache = true\n    )\n    val isDeleted: Boolean\n\n    ...Omit other code...\n}\n')))))}c.isMDXComponent=!0}}]);