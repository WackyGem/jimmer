// -------- Output DTOs --------

SimpleBook {
    id
    name
}

DefaultBook {

    #allScalars

    -tenant

    store {
        id
        name
    }

    authors {
        id
        firstName
        lastName
    }
}

ComplexBook {

    #allScalars

    -tenant

    store {
        #allScalars
        avgPrice
    }

    authors {
        #allScalars
    }
}

// -------- Input DTOs --------

input BookInput {

    /*
     * Here, the macro `allScalars` has parameters, that means only the
     * scalar properties of the `Book` interface itself can be mapped automatically,
     * excluding the scalar properties of the super interfaces.
     */
    #allScalars(Book)

    /*
     * `id(...)` means convert associated object(s) to id(s),
     * for one-to-one/many-to-one property, the dto property alias
     * will be determined automatically. Here, it is `storeId`
     */
    id(store)

    /*
     * `id(...)` means convert associated object(s) to id(s),
     * for one-to-many/many-to-many property, the dto property alias
     * must be specified explicitly
     */
    id(authors) as authorIds
}

input CompositeBookInput {
    #allScalars(Book)
    id(store)
    id(authors) as authorIds
    chapters {
        #allScalars
    }
}